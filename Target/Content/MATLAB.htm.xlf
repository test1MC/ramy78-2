<?xml version="1.0" encoding="UTF-8"?>
<xliff
  version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-strict.xsd" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"
  MadCap:translationStatus="untranslated">
  <file
    xml:space="preserve"
    original="MATLAB.htm"
    source-language="en-us"
    MadCap:file-filter=""
    datatype="xhtml"
    target-language="es">
    <header>
      <skl><external-file
          href="MATLAB.htm.skl" /></skl>
      <phase-group>
        <phase
          phase-name="translation"
          process-name="translation" />
        <phase
          phase-name="completion"
          process-name="translation" />
        <phase
          phase-name="approval"
          process-name="review" />
        <phase
          phase-name="pretrans"
          process-name="pre-translation" />
      </phase-group>
      <count-group
        name="MadCap Statistics">
        <count
          count-type="total"
          unit="segment">23</count>
        <count
          count-type="x-subflow"
          unit="trans-unit">0</count>
      </count-group>
      <tool
        tool-id="MadCap Lingo 11"
        tool-name="Lingo"
        tool-version="11.0.7114.18563"
        tool-company="MadCap Software" />
    </header>
    <body><trans-unit
        id="1"
        restype="x-xml-h1"
        phase-name="pretrans"><source>MATLAB</source><seg-source><mrk
            mtype="seg"
            mid="1">MATLAB</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="2"
        restype="x-xml-p"
        phase-name="pretrans"><source>Uses Highlight.js.</source><seg-source><mrk
            mtype="seg"
            mid="1">Uses Highlight.js.</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="3"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Highlight.js Example</source><seg-source><mrk
            mtype="seg"
            mid="1">Highlight.js Example</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="4"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>n = 20; % number of points
points = [random('unid', 100, n, 1), random('unid', 100, n, 1)];
len = zeros(1, n - 1);
points = sortrows(points);
%% Initial set of points
plot(points(:,1),points(:,2));
for i = 1: n-1
    len(i) = points(i + 1, 1) - points(i, 1);
end
while(max(len) &gt; 2 * min(len))
    [d, i] = max(len);
    k = on_margin(points, i, d, -1);
    m = on_margin(points, i + 1, d, 1);
    xm = 0; ym = 0;
%% New point
    if(i == 1 || i + 1 == n)
        xm = mean(points([i,i+1],1))
        ym = mean(points([i,i+1],2))
    else
        [xm, ym] = dlg1(points([k, i, i + 1, m], 1), ...
            points([k, i, i + 1, m], 2))
    end

    points = [ points(1:i, :); [xm, ym]; points(i + 1:end, :)];
end

%{
    This is a block comment. Please ignore me.
%}

function [net] = get_fit_network(inputs, targets)
    % Create Network
    numHiddenNeurons = 20;  % Adjust as desired
    net = newfit(inputs,targets,numHiddenNeurons);
    net.trainParam.goal = 0.01;
    net.trainParam.epochs = 1000;
    % Train and Apply Network
    [net,tr] = train(net,inputs,targets);
end

foo_matrix = [1, 2, 3; 4, 5, 6]''';
foo_cell = {1, 2, 3; 4, 5, 6}''.'.';

cell2flatten = {1,2,3,4,5};
flattenedcell = cat(1, cell2flatten{:});</source><seg-source><mrk
            mtype="seg"
            mid="1">n = 20; % number of points points = [random('unid', 100, n, 1), random('unid', 100, n, 1)]; len = zeros(1, n - 1); points = sortrows(points); %% Initial set of points plot(points(:,1),points(:,2)); for i = 1: n-1 len(i) = points(i + 1, 1) - points(i, 1); end while(max(len) &gt; 2 * min(len)) [d, i] = max(len); k = on_margin(points, i, d, -1); m = on_margin(points, i + 1, d, 1); xm = 0; ym = 0; %% New point if(i == 1 || i + 1 == n) xm = mean(points([i,i+1],1)) ym = mean(points([i,i+1],2)) else [xm, ym] = dlg1(points([k, i, i + 1, m], 1), ... points([k, i, i + 1, m], 2)) end points = [ points(1:i, :); [xm, ym]; points(i + 1:end, :)]; end %{ This is a block comment.</mrk><mrk
            mtype="protected"
            mid="2"> </mrk><mrk
            mtype="seg"
            mid="3">Please ignore me.</mrk><mrk
            mtype="protected"
            mid="4"> </mrk><mrk
            mtype="seg"
            mid="5">%} function [net] = get_fit_network(inputs, targets) % Create Network numHiddenNeurons = 20; % Adjust as desired net = newfit(inputs,targets,numHiddenNeurons); net.trainParam.goal = 0.01; net.trainParam.epochs = 1000; % Train and Apply Network [net,tr] = train(net,inputs,targets); end foo_matrix = [1, 2, 3; 4, 5, 6]'''; foo_cell = {1, 2, 3; 4, 5, 6}''.'.'; cell2flatten = {1,2,3,4,5}; flattenedcell = cat(1, cell2flatten{:});</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="protected"
            mid="2"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="3"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="protected"
            mid="4"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="5"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="5"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Strings</source><seg-source><mrk
            mtype="seg"
            mid="1">Strings</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="6"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>myString = 'Hello, world';
otherString = 'You''re right';</source><seg-source><mrk
            mtype="seg"
            mid="1">myString = 'Hello, world'; otherString = 'You''re right';</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="7"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Comments</source><seg-source><mrk
            mtype="seg"
            mid="1">Comments</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="8"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>% Single line comment<ph
            id="1" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph>%{<ph
            id="2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph>Multi<ph
            id="3" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph>line<ph
            id="4" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph>comment<ph
            id="5" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph>}%</source><seg-source><mrk
            mtype="seg"
            mid="1">% Single line comment<ph
              id="1" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph></mrk><mrk
            mtype="seg"
            mid="2">%{<ph
              id="2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph></mrk><mrk
            mtype="seg"
            mid="3">Multi<ph
              id="3" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph></mrk><mrk
            mtype="seg"
            mid="4">line<ph
              id="4" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph></mrk><mrk
            mtype="seg"
            mid="5">comment<ph
              id="5" xmlns="urn:oasis:names:tc:xliff:document:1.2">
</ph></mrk><mrk
            mtype="seg"
            mid="6">}%</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="2"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="3"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="4"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="5"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /><mrk
            mtype="seg"
            mid="6"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="9"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Numbers</source><seg-source><mrk
            mtype="seg"
            mid="1">Numbers</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="10"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>x = 325.499
realmax + .0001e+308
e = 1 - 3*(4/3 - 1)
b = 1e-16 + 1 - 1e-16;
x = 2 + 3i;
z =
   4.7842 -1.0921i   0.8648 -1.5931i   1.2616 -2.2753i
   2.6130 -0.0941i   4.8987 -2.3898i   4.3787 -3.7538i
   4.4007 -7.1512i   1.3572 -5.2915i   3.6865 -0.5182i</source><seg-source><mrk
            mtype="seg"
            mid="1">x = 325.499 realmax + .0001e+308 e = 1 - 3*(4/3 - 1) b = 1e-16 + 1 - 1e-16; x = 2 + 3i; z = 4.7842 -1.0921i 0.8648 -1.5931i 1.2616 -2.2753i 2.6130 -0.0941i 4.8987 -2.3898i 4.3787 -3.7538i 4.4007 -7.1512i 1.3572 -5.2915i 3.6865 -0.5182i</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="11"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Control Flow</source><seg-source><mrk
            mtype="seg"
            mid="1">Control Flow</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="12"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>if rem(a, 2) == 0
    disp('a is even')
    b = a/2;
end
switch dayString
   case 'Monday'
      disp('Start of the work week')
   case 'Tuesday'
      disp('Day 2')
   case 'Wednesday'
      disp('Day 3')
   case 'Thursday'
      disp('Day 4')
   case 'Friday'
      disp('Last day of the work week')
   otherwise
      disp('Weekend!')
end
n = 1;
nFactorial = 1;
while nFactorial &lt; 1e100
    n = n + 1;
    nFactorial = nFactorial * n;
end</source><seg-source><mrk
            mtype="seg"
            mid="1">if rem(a, 2) == 0 disp('a is even') b = a/2; end switch dayString case 'Monday' disp('Start of the work week') case 'Tuesday' disp('Day 2') case 'Wednesday' disp('Day 3') case 'Thursday' disp('Day 4') case 'Friday' disp('Last day of the work week') otherwise disp('Weekend!') end n = 1; nFactorial = 1; while nFactorial &lt; 1e100 n = n + 1; nFactorial = nFactorial * n; end</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="13"
        restype="x-xml-madcap:codesnippetcaption"
        phase-name="pretrans"><source>Functions</source><seg-source><mrk
            mtype="seg"
            mid="1">Functions</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit><trans-unit
        id="14"
        restype="x-xml-madcap:codesnippetbody"
        phase-name="pretrans"><source>q = integral(sqr,0,1);
y = parabola(x)
mygrid = @(x,y) ndgrid((-x:x/c:x),(-y:y/c:y));
[x,y] = mygrid(pi,2*pi);</source><seg-source><mrk
            mtype="seg"
            mid="1">q = integral(sqr,0,1); y = parabola(x) mygrid = @(x,y) ndgrid((-x:x/c:x),(-y:y/c:y)); [x,y] = mygrid(pi,2*pi);</mrk></seg-source><target
          state="needs-translation"><mrk
            mtype="seg"
            mid="1"
            MadCap:segmentStatus="Untranslated"
            MadCap:matchPercent="0" /></target></trans-unit></body>
  </file>
</xliff>